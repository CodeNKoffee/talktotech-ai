{
  "sample_meetings": [
    {
      "id": "meeting_001",
      "title": "User Authentication System Design",
      "transcript": "We discussed the user authentication flow. When a user logs in, the system first validates their credentials, then checks their permissions, and finally grants access to the appropriate modules. The sequence involves multiple interactions between the frontend, backend, and database. We need to handle different user roles and their specific access rights."
    },
    {
      "id": "meeting_002",
      "title": "E-commerce Class Design",
      "transcript": "We need to design the User class with attributes like username, email, and password. The User class should inherit from BaseEntity and have relationships with Role and Permission classes. Each User can have multiple Roles, and each Role can have multiple Permissions. We also discussed the Product class and Order class relationships."
    },
    {
      "id": "meeting_003",
      "title": "Order Processing Workflow",
      "transcript": "The business process starts when a customer submits an order. If the item is in stock, we process it immediately. If not, we check with suppliers. Based on the supplier response, we either fulfill the order or notify the customer of delays. This involves multiple decision points and parallel processes."
    },
    {
      "id": "meeting_004",
      "title": "Microservices Architecture",
      "transcript": "Our system architecture consists of several components: the web frontend, the API gateway, the authentication service, the user management service, the payment service, and the database. These components communicate through REST APIs and message queues. We discussed the deployment strategy for each component."
    },
    {
      "id": "meeting_005",
      "title": "User Interface Requirements",
      "transcript": "Users can register for an account, log in, view their profile, update their information, and reset their password. Administrators can manage users, view system reports, and configure system settings. We also discussed guest user capabilities for browsing products."
    },
    {
      "id": "meeting_006",
      "title": "Data Processing Pipeline",
      "transcript": "The workflow involves multiple activities: first, the user submits a request, then the system validates it, processes the request in parallel with other tasks, and finally sends a notification when complete. We discussed the parallel processing capabilities and error handling."
    },
    {
      "id": "meeting_007",
      "title": "General Discussion",
      "transcript": "We had a general discussion about the weather and weekend plans. Nothing technical or business-related was discussed. Just casual conversation about upcoming events and team building activities."
    },
    {
      "id": "meeting_008",
      "title": "Complex System Design",
      "transcript": "We discussed the comprehensive system design including class relationships, component architecture, and user workflows. The system needs to handle user authentication, order processing, and reporting. We need to design classes for User, Order, Product, and Payment. The system architecture includes multiple components: frontend, backend, database, and external APIs. Users will interact with the system through various use cases including registration, ordering, and account management."
    }
  ]
} 